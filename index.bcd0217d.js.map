{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAQ,SAAS,IAAI,CAAC,iBAAiB,CACvC,EAAY,EAAM,OAAO,CAAC,EAAE,CAElC,EAAM,gBAAgB,CAAC,QAAS,SAAU,CAAC,EACzC,IAAM,EAAK,EAAE,MAAM,CAEnB,GAAI,AAAe,OAAf,EAAG,OAAO,EAId,IAAM,EAAU,EAAG,SAAS,CACtB,EAAO,MAAM,IAAI,CAAC,EAAU,IAAI,EAEtC,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAQ,EAAK,KAAK,CAAC,EAAQ,CAAC,SAAS,CAAC,IAAI,GAC1C,EAAQ,EAAK,KAAK,CAAC,EAAQ,CAAC,SAAS,CAAC,IAAI,GAEhD,OAAO,EAAM,aAAa,CAAC,EAAO,KAAA,EAAW,CAAE,QAAS,CAAA,CAAK,EAC/D,GAEA,AAAA,EAAU,MAAM,CAAhB,KAAA,CAAA,E,A,S,C,E,G,M,O,C,G,O,E,E,EAAoB,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,KACtB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.body.firstElementChild;\nvar tableBody = table.tBodies[0];\ntable.addEventListener(\"click\", function(e) {\n    var _tableBody;\n    var th = e.target;\n    if (th.tagName !== \"TH\") return;\n    var thIndex = th.cellIndex;\n    var rows = Array.from(tableBody.rows);\n    rows.sort(function(rowA, rowB) {\n        var cellA = rowA.cells[thIndex].innerText.trim();\n        var cellB = rowB.cells[thIndex].innerText.trim();\n        return cellA.localeCompare(cellB, undefined, {\n            numeric: true\n        });\n    });\n    (_tableBody = tableBody).append.apply(_tableBody, _to_consumable_array(rows));\n});\n\n//# sourceMappingURL=index.bcd0217d.js.map\n","'use strict';\n\nconst table = document.body.firstElementChild;\nconst tableBody = table.tBodies[0];\n\ntable.addEventListener('click', function (e) {\n  const th = e.target;\n\n  if (th.tagName !== 'TH') {\n    return;\n  }\n\n  const thIndex = th.cellIndex;\n  const rows = Array.from(tableBody.rows);\n\n  rows.sort((rowA, rowB) => {\n    const cellA = rowA.cells[thIndex].innerText.trim();\n    const cellB = rowB.cells[thIndex].innerText.trim();\n\n    return cellA.localeCompare(cellB, undefined, { numeric: true });\n  });\n\n  tableBody.append(...rows);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","body","firstElementChild","tableBody","tBodies","addEventListener","e","th","target","tagName","thIndex","cellIndex","rows","from","sort","rowA","rowB","cellA","cells","innerText","trim","cellB","localeCompare","undefined","numeric","append","apply","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError"],"version":3,"file":"index.bcd0217d.js.map"}